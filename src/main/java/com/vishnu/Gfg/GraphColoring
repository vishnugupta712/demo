//TC O(m^n)
//SC O(n)
boolean graphColoring(int node, int[] colors, int[][] graph, int m) {
    if (node == graph.length) return true; // sab nodes color ho gaye

    for (int c = 1; c <= m; c++) {
        if (isSafe(node, colors, graph, c)) {
            colors[node] = c;
            if (graphColoring(node + 1, colors, graph, m)) return true;
            colors[node] = 0; // backtrack
        }
    }

    return false; // koi color assign nahi ho saka
}

boolean isSafe(int node, int[] colors, int[][] graph, int color) {
    for (int i = 0; i < graph.length; i++) {
        if (graph[node][i] == 1 && colors[i] == color) {
            return false; // neighbor same color hai
        }
    }
    return true;
}
